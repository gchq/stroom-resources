# shellcheck disable=SC2034

#comment lines are supported like this (no space before or after "#")

#If bounceIt.sh is unable to determine the IP address of this machine from 
#the operating system you can hard code it here. This must be the public facing
#IP address, e.g. 192.168.0.1, NOT an address local to the machine like 127.0.0.1 .
#STROOM_RESOURCES_ADVERTISED_HOST=x.x.x.x

# Ignore 'unused' warnings

#SERVICE_LIST can be set to a bash array of service names to remove the need 
#to define multiple services on the command line. Therefore uncomment some of the
#following lines to build the required SERVICE_LIST
# shellcheck disable=SC2039
SERVICE_LIST=( \
  #"elasticsearch" \
  #"fake-smtp" \
  #"hbase" \
  #"kafka" \
  #"kibana" \
  "nginx" \
  #"scylladb" \
  #"solr" \
  #"stroom-5" \
  #"stroom" \
  #"stroom-proxy-local" \
  #"stroom-proxy-remote" \
  #"stroom-debug" \
  #"stroom-annotations-service" \
  #"stroom-annotations-ui" \
  "stroom-all-dbs" \
  #"stroom-query-elastic-service" \
  #"stroom-query-elastic-ui" \
  #"stroom-stats" \
  #"zookeeper" \
)

# The following contains most of the essential configuration for the stack.

ELASTIC_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
#ELASTIC_HTTP_PORT=9200
#ELASTIC_BINARY_PORT=9300

#HBASE_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
#KAFKA_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}

#Kafka and Hbase will advertise their own hostnames so whatever host is used must be resolvable
#from inside and outside the docker network. You will need these hosts in /etc/hosts, pointing
#to localhost for this to work.
HBASE_HOST=hbase
KAFKA_HOST=kafka

# Mysql
MYSQL_VOLUME_CONF_FILE=../volumes/stroom-all-dbs/conf/stroom-all-dbs.cnf
MYSQL_VOLUME_INIT=../volumes/stroom-all-dbs/init

# NGINX
NGINX_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
NGINX_ADVERTISED_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
# If this is on your browser will need to supply a valid client certificate
NGINX_SSL_VERIFY_CLIENT=optional
NGINX_SSL_CERTIFICATE=server.pem.crt
NGINX_SSL_CERTIFICATE_KEY=server.unencrypted.key
NGINX_SSL_CA_CERTIFICATE=ca.pem.crt
NGINX_VOLUME_CERTS=../../../dev-resources/certs/server
NGINX_VOLUME_CONF=../volumes/stroom-nginx/conf
NGINX_VOLUME_HTML=../volumes/stroom-nginx/html
NGINX_CLIENT_BODY_BUFFER_SIZE=1M

# ANNOTATIONS SERVICE
STROOM_ANNOTATIONS_DB_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
STROOM_ANNOTATIONS_SERVICE_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
#STROOM_ANNOTATIONS_SERVICE_URL=http://${STROOM_ANNOTATIONS_SERVICE_HOST}/annotationsService
STROOM_ANNOTATIONS_DB_DATA_VOLUME=~/.stroom/db_data/stroom-annotations-db

# ANNOTATIONS UI
STROOM_ANNOTATIONS_UI_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
STROOM_ANNOTATIONS_UI_ACTIVE_SCHEME=https
STROOM_ANNOTATIONS_UI_ACTIVE_PORT=9444

# QUERY ELASTIC SERVICE
STROOM_QUERY_ELASTIC_SERVICE_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
#STROOM_QUERY_ELASTIC_SERVICE_URL=http://${STROOM_QUERY_ELASTIC_SERVICE_HOST}/queryElasticService

# QUERY ELASTIC UI
STROOM_QUERY_ELASTIC_UI_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
# These two ports configure NGINXs HTTP and HTTP ports
#STROOM_QUERY_ELASTIC_UI_HTTP_PORT=5002
#STROOM_QUERY_ELASTIC_UI_HTTPS_PORT=9445
# The following two environment variables configure whether we want to talk to
# the auth UI using HTTPS or HTTP. If changed the corresponding port also needs changing.
#STROOM_QUERY_ELASTIC_UI_ACTIVE_PORT=${STROOM_QUERY_ELASTIC_UI_HTTPS_PORT}
#STROOM_QUERY_ELASTIC_UI_URL=${STROOM_QUERY_ELASTIC_UI_ACTIVE_SCHEME}://${STROOM_QUERY_ELASTIC_UI_HOST}:${STROOM_QUERY_ELASTIC_UI_ACTIVE_PORT}

# AUTH SERVICE
STROOM_AUTH_SERVICE_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
#STROOM_AUTH_SERVICE_PORT=8099
#STROOM_AUTH_SERVICE_ADMIN_PORT=8100
STROOM_AUTH_SERVICE_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
#STROOM_AUTH_LOGS_STROOM_URL=${STROOM_RESOURCES_ADVERTISED_HOST}/stroom/datafeed
STROOM_AUTH_DB_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
STROOM_AUTH_DB_DATA_VOLUME=~/.stroom/db_data/stroom-auth-db
STROOM_AUTH_FORCE_PASSWORD_CHANGE_ON_FIRST_LOGIN=false
STROOM_AUTH_EMAIL_FROM_ADDRESS="fakesmtp-from-address"
STROOM_AUTH_EMAIL_FROM_NAME="Stroom User Accounts"
STROOM_AUTH_EMAIL_RESET_SUBJECT="Password reset for Stroom"
STROOM_AUTH_EMAIL_RESET_TEXT="A password reset has been requested for this email address. Please visit the following URL to reset your password -- %s."
STROOM_AUTH_EMAIL_RESET_TOKEN_VALIDITY_IN_MINUTES=60
#STROOM_AUTH_EMAIL_RESET_URL="http://${STROOM_RESOURCES_ADVERTISED_HOST}:5000/resetPassword/?token=%s"
STROOM_AUTH_EMAIL_SMTP_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
#STROOM_AUTH_EMAIL_SMTP_PORT=2525
#STROOM_AUTH_EMAIL_SMTP_TRANSPORT="plain"
STROOM_AUTH_EMAIL_SMTP_USERNAME="fakesmtp-username"
STROOM_AUTH_EMAIL_SMTP_PASSWORD="fakesmtp-password"
STROOM_AUTH_REQUIRE_PASSWORD_CHANGE_AFTER_X_MINS=43200 # 30 days
STROOM_AUTH_DISABLE_INACTIVE_ACCOUNT_AFTER_X_MINS=12900 # 90 days
STROOM_AUTH_DISABLE_INACTIVE_NEW_ACCOUNT_AFTER_X_MINS=43200 # 30 days
STROOM_AUTH_SECONDS_BETWEEN_PASSWORD_INTEGRITY_CHECKS=3600 # 3600 secs = 60 minutes

# AUTH UI
STROOM_AUTH_UI_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
# These two ports configure NGINXs HTTP and HTTP ports
STROOM_AUTH_UI_ACTIVE_SCHEME=https
STROOM_AUTH_UI_ACTIVE_PORT=9443
# The following two environment variables configure whether we want to talk to 
# the auth UI using HTTPS or HTTP. If changed the corresponding port also needs changing.
STROOM_AUTH_UI_VOLUME_CERTS=../../../dev-resources/certs/server
STROOM_AUTH_UI_VOLUME_CONF=../../../stroom-microservice-ui/template
STROOM_AUTH_ALLOW_PASSWORD_RESETS=true

# STROOM
STROOM_APP_PORT=8080
STROOM_ADMIN_PORT=8083
STROOM_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
STROOM_PROXY_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
STROOM_PROXY_PORT=8090
STROOM_AUTHORISATION_SERVICE_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
STROOM_DB_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
STROOM_DB_PORT=3307
STROOM_DB_DATA_VOLUME=~/.stroom/db_data/stroom-db
STROOM_DEBUG_PORT=10765
STROOM_JAVA_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${STROOM_DEBUG_PORT}"
STROOM_DEBUG_OPT=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=${STROOM_DEBUG_PORT}
STROOM_SECURITY_API_TOKEN_DURATION_TO_WARN_BEFORE_EXPIRY="30d"
STROOM_VOLUME_CONFIG=../volumes/stroom/config

# STROOM-PROXY (local - stores for stroom to colect from the repo) 
STROOM_PROXY_LOCAL_VOLUME_CERTS=../../../dev-resources/certs
STROOM_PROXY_LOCAL_VOLUME_CONFIG=../volumes/stroom-proxy-local/config
STROOM_PROXY_LOCAL_CLIENT_KEYSTORE_PATH=/stroom-proxy/certs/client/client.jks
STROOM_PROXY_LOCAL_CLIENT_TRUSTSTORE_PATH=/stroom-proxy/certs/client/ca.jks

# STROOM-PROXY (remote - stores then forwards to local proxy)
STROOM_PROXY_REMOTE_VOLUME_CERTS=../../../dev-resources/certs
STROOM_PROXY_REMOTE_LOCAL_VOLUME_CONFIG=../volumes/stroom-proxy-remote/config
STROOM_PROXY_REMOTE_CLIENT_KEYSTORE_PATH=/stroom-proxy/certs/client/client.jks
STROOM_PROXY_REMOTE_CLIENT_TRUSTSTORE_PATH=/stroom-proxy/certs/client/ca.jks


# STROOM-UI
STROOM_UI_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
# These two ports configure NGINXs HTTP and HTTP ports
#STROOM_UI_HTTP_PORT=5001
#STROOM_UI_HTTPS_PORT=9443
# The following two environment variables configure whether we want to talk to 
# the auth UI using HTTPS or HTTP. If changed the corresponding port also needs changing.
STROOM_UI_ACTIVE_SCHEME=https
STROOM_UI_ACTIVE_PORT=9443
#STROOM_UI_URL=${STROOM_UI_ACTIVE_SCHEME}://${STROOM_UI_HOST}:${STROOM_UI_ACTIVE_PORT}
STROOM_UI_VOLUME_CERTS=../../../dev-resources/certs/server
STROOM_UI_VOLUME_CONF=../../../stroom-microservice-ui/template

STROOM_STREAM_TASK_SERVICE_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}


# STROOM STATS
STROOM_STATS_DB_HOST=${STROOM_RESOURCES_ADVERTISED_HOST}
STROOM_STATS_DB_DATA_VOLUME=~/.stroom/db_data/stroom-stats-db
#STROOM_STATS_SERVICE_PORT=8086
#STROOM_STATS_SERVICE_ADMIN_PORT=8087
STROOM_STATS_ADVERTISED_HOST_OR_IP=${STROOM_RESOURCES_ADVERTISED_HOST}


# STROOM ALL DBS
MYSQL_VOLUME_CONF_FILE=../volumes/stroom-all-dbs/conf/stroom-all-dbs.cnf
MYSQL_VOLUME_INIT=../volumes/stroom-all-dbs/init
