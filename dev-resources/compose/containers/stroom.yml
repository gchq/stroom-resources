services:
  stroom:
    container_name: stroom
    image: "${STROOM_DOCKER_REPO:-gchq/stroom}:${STROOM_TAG:-v7.0-LATEST}"
    environment:
      - API_GATEWAY_HOST=${NGINX_ADVERTISED_HOST:-$HOST_IP}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT:-443}
      - DOCKER_HOST_HOSTNAME=${DOCKER_HOST_HOSTNAME:-UNKNOWN}
      - DOCKER_HOST_IP=${DOCKER_HOST_IP:-UNKNOWN}
      - JAVA_OPTS=${STROOM_JAVA_OPTS:- -Xms50m -Xmx2g --add-opens java.base/java.nio=ALL-UNNAMED --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.base/java.lang=ALL-UNNAMED}
      - STROOM_CONTENT_PACK_IMPORT_ENABLED=${STROOM_CONTENT_PACK_IMPORT_ENABLED:-false}
      - STROOM_ENABLE_JOBS_ON_BOOTSTRAP=${STROOM_ENABLE_JOBS_ON_BOOTSTRAP:-false}
      - STROOM_HOST=${STROOM_HOST:-$HOST_IP}
      - STROOM_JDBC_DRIVER_PASSWORD=${STROOM_DB_PASSWORD:-stroompassword1}
      - STROOM_JDBC_DRIVER_URL=jdbc:mysql://${STROOM_DB_HOST:-$DB_HOST_IP}:${STROOM_DB_PORT:-3307}/${STROOM_DB_NAME:-stroom}?useUnicode=yes&characterEncoding=UTF-8
      - STROOM_JDBC_DRIVER_USERNAME=${STROOM_DB_USERNAME:-stroomuser}
      - STROOM_SERVICE_DISCOVERY_ENABLED=${STROOM_SERVICE_DISCOVERY_ENABLED:-true}
      - STROOM_SERVICE_DISCOVERY_ZOOKEEPER_URL=${ZOOKEEPER_QUORUM:-zookeeper:2181}
      - STROOM_STATISTICS_JDBC_DRIVER_PASSWORD=${STROOM_STATS_DB_PASSWORD:-stroompassword1}
      - STROOM_STATISTICS_JDBC_DRIVER_URL=jdbc:mysql://${STROOM_STATS_DB_HOST:-$DB_HOST_IP}:${STROOM_STATS_DB_PORT:-3307}/${STROOM_STATS_DB_NAME:-stats}?useUnicode=yes&characterEncoding=UTF-8
      - STROOM_STATISTICS_JDBC_DRIVER_USERNAME=${STROOM_STATS_DB_USERNAME:-statsuser}
      - IDENTITY_PROVIDER_TYPE=${STROOM_IDENTITY_PROVIDER_TYPE:-INTERNAL_IDP}
    ports:
      # Allow the port on the docker host to be changed, internal are fixed
      - "${STROOM_APP_PORT:-8080}:8080"
      - "${STROOM_ADMIN_PORT:-8081}:8081"
      #- "${STROOM_DEBUG_PORT:-10765}:10765"
    healthcheck:
      test: curl --connect-timeout 5 --max-time 10 --fail --silent --head --output /dev/null http://localhost:8081/stroomAdmin/healthcheck || exit 1
      start_period: 1m30s
      interval: 1m
      timeout: 5s
      retries: 3
    volumes:
      - ${STROOM_VOLUME_CONFIG:-../volumes/stroom/config}:/stroom/config:ro
      - type: volume
        source: stroom_content_pack_import
        target: /stroom/content_pack_import
      - type: volume
        source: stroom_lmdb
        target: /stroom/lmdb
      - type: volume
        source: stroom_logs
        target: /stroom/logs
      - type: volume
        source: stroom_output
        target: /stroom/output
        # This volume is shared with stroom-proxy-local. If we ever want to run stroom without
        # a local proxy then we need to move this out into in override yml as is done with
        # stroom-log-sender
      - type: volume
        source: stroom-proxy-local_data
        target: /stroom/proxy_data
      - type: volume
        source: stroom_reference_data
        target: /stroom/reference_data
      - type: volume
        source: stroom_search_results
        target: /stroom/search_results
      - type: volume
        source: stroom_lmdb_library
        target: /stroom/lmdb_library
      - type: volume
        source: stroom_volumes
        target: /stroom/volumes
    logging:
      driver: "json-file"
      options:
        max-size: "${STROOM_STD_OUT_LOGS_MAX_SIZE:-10m}"
        max-file: "${STROOM_STD_OUT_LOGS_MAX_FILES:-2}"
    labels:
      - "stack_name=${STACK_NAME:-<STACK_NAME>}"
    # Allows us to pass other commands to the app, e.g. migrate
    # This is to allow us to run migrate.
    # For other commands that have args see command.sh in the stack which overrides the docker command
    command: "./start.sh ${STROOM_DROPWIZARD_COMMAND:-server}"
volumes:
  stroom_content_pack_import:
  stroom_lmdb:
  stroom_lmdb_library:
  stroom_logs:
  stroom_output:
  stroom_reference_data:
  stroom_search_results:
  stroom_volumes:
