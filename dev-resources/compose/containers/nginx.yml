services:
  nginx:
    container_name: "${CONTAINER_NAME_PREFIX}nginx"
    image: "${STROOM_NGINX_DOCKER_REPO:-gchq/stroom-nginx}:${STROOM_NGINX_TAG:-v7.0-LATEST}"
    environment:
      - DOCKER_HOST_HOSTNAME=${DOCKER_HOST_HOSTNAME:-UNKNOWN}
      - DOCKER_HOST_IP=${DOCKER_HOST_IP:-UNKNOWN}
      - NGINX_ADVERTISED_HOST=${NGINX_ADVERTISED_HOST:-$HOST_IP}
      - API_GATEWAY_HOST=${NGINX_ADVERTISED_HOST:-$HOST_IP}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT:-443}
      - NGINX_CLIENT_BODY_BUFFER_SIZE=${NGINX_CLIENT_BODY_BUFFER_SIZE:-1M}
      - NGINX_SSL_CERTIFICATE=${NGINX_SSL_CERTIFICATE:-server.pem.crt}
      - NGINX_SSL_CERTIFICATE_KEY=${NGINX_SSL_CERTIFICATE_KEY:-server.unencrypted.key}
      - NGINX_SSL_CA_CERTIFICATE=${NGINX_SSL_CA_CERTIFICATE:-ca.pem.crt}
        # Enabling NGINX_SSL_VERIFY_CLIENT means we can capture the DN and cert expiry
        # in the datafeed but means the client cert must be imported into the browser
        # so set it to 'optional' so that it asks the client for a cert and if it
        # provides one it will inspect it
      - NGINX_SSL_VERIFY_CLIENT=${NGINX_SSL_VERIFY_CLIENT:-optional}
      - NGINX_HTML_ROOT_PATH=${NGINX_HTML_ROOT_PATH:-/stroom-nginx/html}
      - STROOM_HOST=${STROOM_HOST:-$HOST_IP}
      - STROOM_PORT=${STROOM_APP_PORT:-8080}
      - STROOM_PROXY_HOST=${STROOM_PROXY_HOST:-$HOST_IP}
      - STROOM_PROXY_PORT=${STROOM_PROXY_APP_PORT:-8090}
    volumes:
      - ${NGINX_VOLUME_CERTS:-../volumes/nginx/certs}:/stroom-nginx/certs:ro
      # nginx.conf.template - used to create the actual config when the container starts
      - ${NGINX_VOLUME_CONF:-../volumes/nginx/conf}:/stroom-nginx/config:ro
      - ${NGINX_VOLUME_HTML:-../volumes/nginx/html}:${NGINX_HTML_ROOT_PATH:-/stroom-nginx/html}:ro
      - type: volume
        source: nginx_logs
        target: /stroom-nginx/logs
      - type: volume
        source: nginx_logrotate
        target: /stroom-nginx/logrotate
    ports:
      - "${API_GATEWAY_INSECURE_PORT:-80}:80"
      - "${API_GATEWAY_PORT:-443}:443"
    logging:
      driver: "json-file"
      options:
        max-size: "${NGINX_STD_OUT_LOGS_MAX_SIZE:-10m}"
        max-file: "${NGINX_STD_OUT_LOGS_MAX_FILES:-2}"
    labels:
      - "stack_name=${STACK_NAME:-<STACK_NAME>}"
volumes:
  nginx_logrotate:
  nginx_logs:
